from .base_test import BaseTest

class TemperamentTest(BaseTest):
    def __init__(self):
        super().__init__("temperament")
        self.temperaments = {
            "sanguine": "–°–∞–Ω–≥–≤–∏–Ω–∏–∫ üé≠",
            "choleric": "–•–æ–ª–µ—Ä–∏–∫ üî•", 
            "phlegmatic": "–§–ª–µ–≥–º–∞—Ç–∏–∫ üßä",
            "melancholic": "–ú–µ–ª–∞–Ω—Ö–æ–ª–∏ik üåô"
        }
        self.setup_questions()
    
    def setup_questions(self):
        self.questions = [
            {
                "text": "üî• –ö–∞–∫ –≤—ã —Ä–µ–∞–≥–∏—Ä—É–µ—Ç–µ –Ω–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",
                "type": "choice",
                "options": [
                    "üé≠ –ë—ã—Å—Ç—Ä–æ –∞–¥–∞–ø—Ç–∏—Ä—É—é—Å—å, –Ω–∞—Ö–æ–∂—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏",
                    "üî• –ê–∫—Ç–∏–≤–Ω–æ –¥–µ–π—Å—Ç–≤—É—é, –±–µ—Ä—É –∫–æ–Ω—Ç—Ä–æ–ª—å",
                    "üßä –°–æ—Ö—Ä–∞–Ω—è—é —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é",
                    "üåô –ü–µ—Ä–µ–∂–∏–≤–∞—é,ÊãÖÂøÉ—é—Å—å –æ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö"
                ]
            },
            {
                "text": "üî• –í–∞—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º?",
                "type": "choice",
                "options": [
                    "üé≠ –õ–µ–≥–∫–æ –∏–¥—É –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç, –æ–±—â–∏—Ç–µ–ª–µ–Ω",
                    "üî• –ë–µ—Ä—É –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É, –≤–µ–¥—É –±–µ—Å–µ–¥—É",
                    "üßä –ù–∞–±–ª—é–¥–∞—é —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã, –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω",
                    "üåô –°—Ç–µ—Å–Ω—è—é—Å—å, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –∑–Ω–∞–∫–æ–º—ã—Ö"
                ]
            },
            {
                "text": "üî• –ö–∞–∫ –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Ä–µ—à–µ–Ω–∏—è?",
                "type": "choice", 
                "options": [
                    "üé≠ –ë—ã—Å—Ç—Ä–æ,Âü∫‰∫é –Ω–∞ intuition",
                    "üî• –†–µ—à–∏—Ç–µ–ª—å–Ω–æ, —É–≤–µ—Ä–µ–Ω–Ω–æ",
                    "üßä –í–∑–≤–µ—à–µ–Ω–Ω–æ, –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏",
                    "üåô –û—Å—Ç–æ—Ä–æ–∂–Ω–æ, —Å —Å–æ–º–Ω–µ–Ω–∏—è–º–∏"
                ]
            },
            {
                "text": "üî• –í–∞—à–∞ —Ä–∞–±–æ—á–∞—è —Å—Ç–∏–ª—å?",
                "type": "choice",
                "options": [
                    "üé≠ –ú–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å, –±—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å",
                    "üî• –≠–Ω–µ—Ä–≥–∏—á–Ω–æ, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ",
                    "üßä –ú–µ—Ç–æ–¥–∏—á–Ω–æ, —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏",
                    "üåô –í–¥—É–º—á–∏–≤–æ,Ê≥®Èáç –¥–µ—Ç–∞–ª–∏"
                ]
            },
            {
                "text": "üî• –ö–∞–∫ –≤—ã –≤—ã—Ä–∞–∂–∞–µ—Ç–µ —ç–º–æ—Ü–∏–∏?",
                "type": "choice",
                "options": [
                    "üé≠ –Ø—Ä–∫–æ, –æ—Ç–∫—Ä—ã—Ç–æ, –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ",
                    "üî• –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ, —Å—Ç—Ä–∞—Å—Ç–Ω–æ",
                    "üßä –°–¥–µ—Ä–∂–∞–Ω–Ω–æ, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ",
                    "üåô –ì–ª—É–±–æ–∫–æ, –Ω–æ —Å–∫—Ä—ã—Ç–Ω–æ"
                ]
            }
        ]
    
    def calculate_result(self):
        temperament_scores = {key: 0 for key in self.temperaments.keys()}
        temperament_map = {
            0: "sanguine", 1: "choleric", 2: "phlegmatic", 3: "melancholic"
        }
        
        for answer_index in self.answers:
            temperament_key = temperament_map[answer_index]
            temperament_scores[temperament_key] += 1
        
        return temperament_scores
    
    def generate_report(self, results):
        primary_temp = max(results.items(), key=lambda x: x[1])
        secondary_temp = sorted(results.items(), key=lambda x: x[1], reverse=True)[1]
        
        temp_descriptions = {
            "sanguine": "–ñ–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω—ã–π, –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π, –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π. –ë—ã—Å—Ç—Ä–æ –∑–∞–≥–æ—Ä–∞–µ—Ç—Å—è –∏ –æ—Å—Ç—ã–≤–∞–µ—Ç. –õ—é–±–∏—Ç –Ω–æ–≤–∏–∑–Ω—É –∏ –ø–µ—Ä–µ–º–µ–Ω—ã.",
            "choleric": "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–π, –ª–∏–¥–µ—Ä. –†–µ—à–∏—Ç–µ–ª–µ–Ω –∏ –ø—Ä—è–º–æ–ª–∏–Ω–µ–µ–Ω. –°–∫–ª–æ–Ω–µ–Ω –∫ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—é.",
            "phlegmatic": "–°–ø–æ–∫–æ–π–Ω—ã–π, —É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã–π, reliable. –ú–µ—Ç–æ–¥–∏—á–µ–Ω –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–Ω. –ò–∑–±–µ–≥–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤.",
            "melancholic": "–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π, –≤–¥—É–º—á–∏–≤—ã–π, –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç. –ì–ª—É–±–æ–∫–æ –ø–µ—Ä–µ–∂–∏–≤–∞–µ—Ç —ç–º–æ—Ü–∏–∏.Ê≥®Èáç –¥–µ—Ç–∞–ª–∏."
        }
        
        report = f"""
üî• **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –Ω–∞ —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç**

**–í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç:**
{self.temperaments[primary_temp[0]]} - {primary_temp[1]}/5 –±–∞–ª–ª–æ–≤

**–í—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–π —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç:**
{self.temperaments[secondary_temp[0]]} - {secondary_temp[1]}/5 –±–∞–ª–ª–æ–≤

üìä **–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤:**
{self.format_scores(results)}

üí° **–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç–∞:**
{temp_descriptions[primary_temp[0]]}

üåü **–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:**
{self.get_strengths(primary_temp[0])}

‚ö†Ô∏è **–ó–æ–Ω—ã —Ä–æ—Å—Ç–∞:**
{self.get_weaknesses(primary_temp[0])}

üíº **–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
{self.get_career_advice(primary_temp[0])}
"""
        return report
    
    def format_scores(self, scores):
        lines = []
        for temp, score in sorted(scores.items(), key=lambda x: x[1], reverse=True):
            lines.append(f"‚Ä¢ {self.temperaments[temp]}: {score}/5")
        return "\n".join(lines)
    
    def get_strengths(self, temperament):
        strengths = {
            "sanguine": "–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å, –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å, –æ–ø—Ç–∏–º–∏–∑–º, —ç–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å",
            "choleric": "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ, —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å, efficiency",
            "phlegmatic": "–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ, reliability, —Ç–µ—Ä–ø–µ–Ω–∏–µ, –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω–æ—Å—Ç—å", 
            "melancholic": "–ê–Ω–∞–ª–∏—Ç–∏—á–Ω–æ—Å—Ç—å, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, –≥–ª—É–±–∏–Ω–∞"
        }
        return strengths[temperament]
    
    def get_weaknesses(self, temperament):
        weaknesses = {
            "sanguine": "–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ—Å—Ç—å, –Ω–µ–ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ, impulsiveness",
            "choleric": "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å, –Ω–µ—Ç–µ—Ä–ø–∏–º–æ—Å—Ç—å, –¥–æ–º–∏–Ω–∞–Ω—Ç–Ω–æ—Å—Ç—å",
            "phlegmatic": "–ü–∞—Å—Å–∏–≤–Ω–æ—Å—Ç—å, –º–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –∏–Ω–µ—Ä—Ç–Ω–æ—Å—Ç—å",
            "melancholic": "–ü–µ—Å—Å–∏–º–∏–∑–º, —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å, –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º"
        }
        return weaknesses[temperament]
    
    def get_career_advice(self, temperament):
        advice = {
            "sanguine": "–ü—Ä–æ–¥–∞–∂–∏, PR, event-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç, teaching, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏",
            "choleric": "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ, –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ, —Å–ø–æ—Ä—Ç, —é—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è",
            "phlegmatic": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ, –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è, IT, research, –º–µ–¥–∏—Ü–∏–Ω–∞",
            "melancholic": "–ò—Å–∫—É—Å—Å—Ç–≤–æ, –¥–∏–∑–∞–π–Ω, –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è, writing, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞"
        }
        return advice[temperament]